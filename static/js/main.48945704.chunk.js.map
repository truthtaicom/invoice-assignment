{"version":3,"sources":["ui-kit/Variables/Colors.tsx","ui-kit/Button/Button.tsx","ui-kit/DatePicker/DatePicker.tsx","ui-kit/Input/Input.tsx","ui-kit/Text/Text.tsx","ui-kit/List/SimpleList.tsx","ui-kit/Modal/Modal.tsx","ui-kit/ToggleSwitch/ToggleSwitch.tsx","ui-kit/Tabs/Tabs.tsx","ui-kit/Tabs/TabItem.tsx","ui-kit/IBANInput/IBANInput.tsx","ui-kit/Form/Form.tsx","ui-kit/Form/FormItem.tsx","ui-kit/Loading/Loading.tsx","components/Invoice/InvoiceList/InvoiceItem.tsx","components/Invoice/InvoiceInformation/InvoiceInformation.tsx","components/Invoice/InvoicePayment/InvoicePayment.tsx","components/Invoice/InvoiceList/InvoiceList.tsx","components/Invoice/Invoice.actionTypes.ts","utils/delay.ts","services/getInvoices.ts","services/searchIBAN.ts","components/Invoice/Invoice.actions.ts","components/Invoice/InvoiceList/InvoiceList.container.tsx","components/Invoice/InvoiceList/index.ts","pages/Home.tsx","serviceWorker.js","components/Invoice/Invoice.reducer.ts","store/index.ts","index.js"],"names":["primary","white","danger","success","warning","black","grey","blue1","grey2","grey3","gray80","blue2","Button","styled","button","_templateObject","Colors","props","color","disabled","concat","DatePickerWrapper","div","DatePicker_templateObject","DatePicker","react_default","a","createElement","ui_kit_Input_Input","react_datepicker_es","Object","assign","selected","selectedDate","StyledInput","Input_templateObject","isActived","StyledInputWrapper","_templateObject2","isExtandHeader","isExtandContent","StyledLabel","label","_templateObject3","StyledLabel2ndMobile","span","_templateObject4","StyledInputContent","input","_templateObject5","Input","_ref","children","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","value","setValue","_useState3","_useState4","isOpen","setIsOpen","useEffect","defaultValue","isFormat","toLocaleString","Date","toISOString","slice","onClick","Text_Text","unit","onChange","e","_value","target","length","parseInt","Text","Text_templateObject","isBold","StyledList","SimpleList_templateObject","SimpleList","data","renderItem","map","StyledModalWrapper","Modal_templateObject","StyledModalContent","Modal_templateObject2","StyledModalHeader","Modal_templateObject3","StyledModalClose","Modal_templateObject4","StyledModalHeaderTitle","Modal_templateObject5","StyledModalBody","_templateObject6","StyledModalMark","_templateObject7","Modal","onClose","title","ReactDOM","createPortal","document","body","StyledToggleSwitch","ToggleSwitch_templateObject","StyledToggleSwitchLabel","ToggleSwitch_templateObject2","StyledToggleSwitchBody","ToggleSwitch_templateObject3","StyledToggleSwitchInput","ToggleSwitch_templateObject4","StyledToggleSwitchContent","ToggleSwitch_templateObject5","ToggleSwitch","type","defaultChecked","StyledTabs","Tabs_templateObject","StyledTitle","Tabs_templateObject2","StyledContent","Tabs_templateObject3","StyledTitleItem","Tabs_templateObject4","activeTab","name","Tabs","setActiveTab","childrenFull","filter","elm","defaultActivedTab","child","key","StyledTabItem","TabItem_templateObject","TabItem","IBANInput","react_input_mask_default","mask","inputProps","placeholder","StyledForm","form","Form_templateObject","Form","onSubmit","preventDefault","values","Array","from","elements","reduce","prev","cur","arguments","undefined","objectSpread","defineProperty","checked","StyledFormItem","FormItem_templateObject","StyledLoading","Loading_templateObject","Loading","StyledDateText","InvoiceItem_templateObject","StyledSubjectText","InvoiceItem_templateObject2","StyledAmountText","InvoiceItem_templateObject3","StyledIBANNumText","InvoiceItem_templateObject4","StyledInvoiceItem","InvoiceItem_templateObject5","hasControl","actived","StyledInvoiceItemControl","InvoiceItem_templateObject6","InvoiceItem","React","memo","onEdit","onDelete","item","date","subject","amount","ibanNum","Button_Button","StyledInvoiceInformation","InvoiceInformation_templateObject","StyledButtonSubmit","InvoiceInformation_templateObject2","InvoiceInformation","_ref$item","itemDate","setDate","isRetrieve","setIsRetrive","_useState5","_useState6","setAmount","_useState7","_useState8","setSubject","isValidWithII","isValidWithPayments","Form_Form","keys","amountFromValue","toString","onNext","FormItem","ui_kit_DatePicker_DatePicker","dateFormat","ui_kit_ToggleSwitch_ToggleSwitch","onRetriveFromBankAcc","InvoicePayment_templateObject","StyledInvoicePaymentForm","InvoicePayment_templateObject2","StyledFoundInvoiceText","InvoicePayment_templateObject3","StyledBtnConfirm","InvoicePayment_templateObject4","InvoicePayment","InvoicePayment_StyledInvoiceInformation","ui_kit_IBANInput_IBANInput","includes","onChangeIBANNum","Fragment","List_SimpleList","itemProps","InvoiceList_InvoiceItem","id","onSelect","StyledInvoiceList","InvoiceList_templateObject","StyledInvoiceListHead","InvoiceList_templateObject2","StyledInvoiceListTitle","InvoiceList_templateObject3","StyledInvoiceListAddBtn","InvoiceList_templateObject4","StyledInvoiceListBody","InvoiceList_templateObject5","StyledModalConfirm","InvoiceList_templateObject6","InvoiceList","loading","selectItem","selectedItem","searchIBAN","getInvoices","addInvoice","editInvoice","deleteInvoice","paymentsFromBankAccount","modeInvoiceModal","isDeleteMode","setModeInvoice","resetState","setTabActive","activedTab","isRetrieveFromBankAcc","setRetrieveFromBankAcc","selectedPaymentItem","selectPaymentItem","isOpenModal","setIsOpenModal","isOpenModalAddAndEdit","isOpenModalDelete","idx","ui_kit_Modal_Modal","ui_kit_Tabs_Tabs","Tabs_TabItem","InvoiceInformation_InvoiceInformation","valuesNew","InvoicePayment_InvoicePayment","GET_INVOICES_REQUEST","GET_INVOICES_SUCCESS","GET_INVOICES_FAILURE","SEARCH_IBAN_REQUEST","SEARCH_IBAN_SUCCESS","SEARCH_IBAN_FAILURE","ADD_INVOICE","DELETE_INVOICE","EDIT_INVOICE","SELECT_ITEM","SET_MODE","RESET_STATE","SET_TAB_ACTIVE","SET_RETRIEVE_FROM_BANK_ACC","SELECT_PAYMENT_ITEM","delay","timer","Promise","resolve","setTimeout","_getInvoices","apply","this","_callee","regenerator_default","wrap","_context","next","abrupt","invoicedata","stop","_x","_searchIBAN","iban","editInvoiceAction","payload","deleteInvoiceAction","dispatch","mapDispatchToProps","asyncToGenerator","mark","invoices","getInvoicesService","sent","t0","_ref3","_ref3$unit","_ref4","_callee3","_context3","_x3","_ref7","_ref8","_callee5","_context5","_x5","_ref5","_ref6","_callee4","_context4","_x4","_ref2","_callee2","_context2","searchIBANService","error","_x2","mode","setModeAction","tabName","setRetrieveFromBankAccAction","InvoiceListContainer","connect","state","invoiceReducer","request","Home","className","Invoice_InvoiceList","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","action","toConsumableArray","newElm","store","createStore","compose","applyMiddleware","thunk","f","Root","es","pages_Home","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48945704.chunk.js","sourcesContent":["// colors\nexport const primary = '#007bff'\nexport const white = '#fff'\nexport const danger = '#dc3545'\nexport const success = '#28a745'\nexport const warning = '#ffc107'\nexport const black = '#000'\nexport const grey = '#dddddd'\n\nexport const blue1 = '#007bff30'\nexport const grey2 = '#f3f3f3'\nexport const grey3 = '#dddddd54'\nexport const gray80 = '#ccc'\nexport const blue2 = '#2196F3'\n","import React from 'react';\nimport styled from 'styled-components'\nimport * as Colors from '../Variables/Colors'\n\nexport type ButtonColor = 'success' | 'warning' | 'danger' | 'primary';\n\nexport interface IButtonProps {\n  children?: React.ReactNode,\n  onClick?: (e:any) => void,\n  color: ButtonColor\n}\n\nconst Button = styled.button<IButtonProps>`\n  color: ${Colors.white};\n  background-color: ${(props) => Colors[props.color]};\n  border-color: ${(props) => Colors[props.color]};\n\n  display: inline-block;\n  font-weight: 400;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: middle;\n  user-select: none;\n  border: 1px solid transparent;\n  padding: .375rem .75rem;\n  font-size: 1rem;\n  line-height: 1.5;\n  border-radius: .25rem;\n  transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;\n  ${props => props.disabled && `background-color: ${Colors.grey};`}\n  cursor: pointer;\n`\nexport default Button;","import React from 'react'\nimport styled from 'styled-components'\nimport ReactDatePicker, { ReactDatePickerProps } from \"react-datepicker\";\nimport * as Colors from '../Variables/Colors'\nimport { Input } from '../'\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport interface IDatePicker {\n  label?: string\n}\n\nconst DatePickerWrapper = styled.div`\n  input {\n    display: block;\n    width: calc(100% - 1.75rem);\n    padding: .375rem .75rem;\n    font-size: 1rem;\n    line-height: 1.5;\n    color: #495057;\n    background-color: ${Colors.white};\n    background-clip: padding-box;\n    border: 1px solid #ced4da;\n    border-radius: .25rem;\n    transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;\n  }\n`\n\n\nconst DatePicker: React.FC<ReactDatePickerProps & any> = (props) => {\n  return (\n    <DatePickerWrapper>\n      <Input {...props}>\n        <ReactDatePicker {...props} selected={props.selectedDate} />\n      </Input>\n    </DatePickerWrapper>\n  )\n}\n\nexport default DatePicker;","import React, { useState, useEffect } from 'react';\nimport { Text } from '../'\nimport styled from 'styled-components'\nimport * as Colors from '../Variables/Colors'\n\nexport interface IInput {\n  label?: string\n  name?: string,\n  type?: string,\n  onChange?: (e: any) => void,\n  defaultValue?: string,\n  placeholder?: string,\n  value?: string,\n  selectedDate?: string,\n  unit?: string,\n  isFormat?: boolean\n}\n\nexport interface IStyledInputWrapper {\n  isActived? : boolean,\n  isExtandHeader?: boolean,\n  isExtandContent?: boolean,\n}\n\nconst StyledInput = styled.div<IStyledInputWrapper>`\n  display: grid;\n  grid-template-rows: ${props => props.isActived ? '1fr 1fr' : '1fr' }; \n  padding: 1rem;\n\n  @media only screen and (min-width: 680px) {\n    grid-template-rows: 1fr;\n  }\n`\n\nconst StyledInputWrapper = styled.div<IStyledInputWrapper>`\n  display: ${props => props.isActived ? 'grid' : 'none'};\n  grid-template-columns: 0.8fr 1fr 0.2fr;\n  transition: all 0.5s;\n  cursor: pointer;\n\n  padding: 1rem;\n  background: #ddd;\n\n  @media only screen and (min-width: 680px) {\n    ${props => props.isExtandHeader ? 'display: none;' : 'display: grid;'}\n    ${props => props.isExtandContent ? 'display: grid;' : 'display: none;'}\n    grid-template-columns: 0.8fr 1fr;\n  }\n`\n\nconst StyledLabel = styled.label`\n  text-align: left;\n  align-items: center;\n  display: grid;\n  padding-right: 0.5rem;\n`\nconst StyledLabel2ndMobile = styled.span`\n  display: contents;\n\n  @media only screen and (min-width: 680px) {\n    display: none;\n  }\n`\n\nconst StyledInputContent = styled.input`\n  display: block;\n  width: 100%;\n  padding: .375rem .75rem;\n  font-size: 1rem;\n  line-height: 1.5;\n  color: ${Colors.black};\n  background-color: ${Colors.white};\n  background-clip: padding-box;\n  border: 1px solid ${Colors.grey};\n  border-radius: .25rem;\n  transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;\n  width: calc(100% - 1.75rem);\n`\n\nconst Input: React.FC<IInput> = ({ label, children, ...props }) => {\n  const [value, setValue] = useState()\n\n  const [isOpen, setIsOpen] = useState(false)\n  const toggle = () => {\n    setIsOpen(!isOpen)\n  }\n\n  const onChange = (e) => {\n    let _value = e.target.value;\n    if(props.isFormat && _value.length) {\n      _value = parseInt(_value, 10)\n    }\n    setValue(_value)\n    props.onChange && props.onChange(e)\n  }\n\n  useEffect(() => {\n    setValue(props.value || props.defaultValue)\n  }, [props.value, props.defaultValue])\n\n  useEffect(() => {\n    if(props.isFormat && value) {\n      setValue(value.toLocaleString())\n    }\n  }, [value, props.isFormat])\n\n  useEffect(() => {\n    if(props.selectedDate) {\n      setValue(new Date(props.selectedDate).toISOString().slice(0,10))\n    }\n  }, [props.selectedDate])\n\n  return (\n    <StyledInput isActived={isOpen}>\n      <StyledInputWrapper onClick={toggle} isActived isExtandHeader>\n        <Text>{label}</Text>\n        <Text>{ value } {props.unit}</Text>\n        <Text>{ isOpen ? '-' : '+'}</Text>\n      </StyledInputWrapper>\n      <StyledInputWrapper isActived={isOpen} isExtandContent>\n        {label && <StyledLabel> <StyledLabel2ndMobile>Enter </StyledLabel2ndMobile>  {label}</StyledLabel>}\n        { children ? children : <StyledInputContent {...props} onChange={onChange} /> }\n      </StyledInputWrapper>\n    </StyledInput>\n  )\n}\n\nexport default Input;","import React from 'react';\nimport styled from 'styled-components'\nimport * as Colors from '../Variables/Colors'\n\nexport interface IText{\n  children?: React.ReactNode,\n  onClick?: (e: any) => void,\n  color?: any,\n  isBold?: boolean\n}\n\nconst Text = styled.span<IText>`\n  color: ${(props) => Colors[props.color]};\n  font-weight: ${props => props.isBold ? 'bold' : 'normal'};\n`\n\nexport default Text;","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledList = styled.div`\n\n`\n\nexport interface IList {\n  data: Array<any>,\n  renderItem: (item: any, idx: number) => any\n}\n\nconst SimpleList: React.FC<IList> = ({ data, renderItem }) => {\n  if(!data || !data.length) return null;\n\n  return (\n    <StyledList>\n      {\n        data.map(renderItem)\n      }\n    </StyledList>\n  )\n}\n\nexport default SimpleList","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport styled from 'styled-components'\nimport * as Colors from '../Variables/Colors'\n\nexport interface IModal {\n  isOpen: boolean,\n  children: React.ReactNode,\n  onClose?: (e: any) => void,\n  title?: string\n}\n\nexport interface StyledModalWrapper {\n  isOpen: boolean\n}\n\nconst StyledModalWrapper = styled.div<StyledModalWrapper>`\n  display: ${props => props.isOpen ? 'block' : 'none'};\n  position: fixed;\n  z-index: 1;\n  padding-top: 100px;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: rgb(0,0,0);\n  background-color: rgba(0,0,0,0.4);\n\n  @media only screen and (max-width: 680px) {\n    padding-top: 0;\n  }\n`\n\nconst StyledModalContent = styled.div`\n  position: relative;\n  background-color: ${Colors.grey2};\n  margin: auto;\n  padding: 0;\n  border: 1px solid #888;\n  width: 60%;\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n  animation-name: animatetop;\n  animation-duration: 0.4s;\n  z-index: 3;\n\n  @-webkit-keyframes animatetop {\n    from {top:-300px; opacity:0} \n    to {top:0; opacity:1}\n  }\n  \n  @keyframes animatetop {\n    from {top:-300px; opacity:0}\n    to {top:0; opacity:1}\n  }\n\n  @media only screen and (max-width: 680px) {\n    width: 100%;\n    height: 100%;\n    border: none;\n    margin: 0;\n  }\n  \n`\n\nconst StyledModalHeader = styled.div`\n  padding: 0.5rem 1rem;\n  background-color: ${Colors.primary}\n  color: ${Colors.white};\n  display: grid;\n  grid-template-columns: 3fr 20px;\n  align-items: center;\n`\n\nconst StyledModalClose = styled.span`\n  color: white;\n  font-size: 28px;\n  font-weight: bold;\n  text-align: right;\n\n  &:hover, &:focus {\n    text-decoration: none;\n    cursor: pointer;\n  }\n`\n\nconst StyledModalHeaderTitle = styled.span``\n\nconst StyledModalBody = styled.div`\n  @media only screen and (max-width: 680px) {\n    width: 100%;\n    height: 100%;\n  }\n`\n\nconst StyledModalMark = styled.div`\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  z-index: 1;\n`\n\nconst Modal: React.FC<IModal> = ({ isOpen, children, onClose, title }) => {\n  return isOpen ? ReactDOM.createPortal(\n    <StyledModalWrapper isOpen={isOpen}>\n      <StyledModalContent>\n          {\n            title &&\n            <StyledModalHeader>\n              <StyledModalHeaderTitle>{title}</StyledModalHeaderTitle>\n              <StyledModalClose onClick={onClose}>&times;</StyledModalClose>\n            </StyledModalHeader>\n          }\n        <StyledModalBody>\n          {children}\n        </StyledModalBody>\n      </StyledModalContent>\n      <StyledModalMark onClick={onClose} />\n    </StyledModalWrapper>\n    , document.body\n  ) : null\n}\n\nexport default Modal","import React, { useState, useEffect } from 'react';\nimport { IInput } from '../Input/Input'\nimport styled from 'styled-components'\nimport * as Colors from '../Variables/Colors';\n\nexport interface IToggleSwitch{\n  name?: string;\n  isOpen?: boolean;\n  label?: string;\n  onChange: (e: any) => void;\n}\n\nexport interface IStyledToggleSwitchContent extends IInput {\n  isOpen: boolean\n}\n\nconst StyledToggleSwitch = styled.div`\n  display: grid;\n  grid-template-columns: 0.8fr 1fr 0.2fr;\n  padding: 1rem;\n`\n\nconst StyledToggleSwitchLabel = styled.label`\n  text-align: left;\n  align-items: center;\n  display: grid;\n  padding-right: 0.5rem;\n`\n\nconst StyledToggleSwitchBody = styled.label`\n  position: relative;\n  display: inline-block;\n  width: 60px;\n  height: 34px;\n`\n\nconst StyledToggleSwitchInput = styled.input`\n  opacity: 0;\n  width: 0;\n  height: 0;\n`\n\nconst StyledToggleSwitchContent = styled.span<IStyledToggleSwitchContent>`\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: ${Colors.gray80};\n  transition: .4s;\n  border-radius: 34px;\n\n  ${props => props.isOpen && \n    `\n    background-color: ${Colors.blue2};\n    box-shadow: 0 0 1px ${Colors.blue2};\n    `\n  }\n  \n\n  &:before {\n    position: absolute;\n    content: \"\";\n    height: 26px;\n    width: 26px;\n    left: 4px;\n    bottom: 4px;\n    background-color: white;\n    transition: .4s;\n    border-radius: 50%;\n\n    transform: ${props => props.isOpen ? 'translateX(26px)' : 'none'};\n  }\n`\n\nconst ToggleSwitch: React.FC<IToggleSwitch> = ({ onChange, isOpen, label, ...props }) => {\n  const [value, setValue] = useState(false)\n\n  useEffect(() => {\n    setValue(!!isOpen)\n  }, [isOpen])\n\n  useEffect(() => {\n    onChange(value)\n  }, [onChange, value])\n\n  const onChangeInput = () => {\n    setValue(!value)\n  }\n\n  return (\n    <StyledToggleSwitch>\n      {label && <StyledToggleSwitchLabel>{label}</StyledToggleSwitchLabel> }\n      <StyledToggleSwitchBody>\n        <StyledToggleSwitchInput type=\"checkbox\" defaultChecked={value} onClick={onChangeInput}/>\n        <StyledToggleSwitchContent isOpen={value} />\n      </StyledToggleSwitchBody>\n    </StyledToggleSwitch>\n  )\n}\nexport default ToggleSwitch;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'\nimport * as Colors from '../Variables/Colors';\n\nimport { Text } from '../'\n\nexport interface IStyledTitleItem {\n  activeTab: string\n  name: string\n}\n\nconst StyledTabs = styled.div`\n  display: grid;\n  grid-template-columns: minmax(max-content, 5rem) auto;\n  grid-row-gap: 1px;\n  background: ${Colors.grey3};\n\n  @media only screen and (max-width: 680px) {\n    height: 100%;\n    width: 100%;\n\n    button {\n      position: fixed;\n      bottom: 0;\n      width: 100%;\n      margin-left: -1rem;\n      padding: 1rem;\n    }\n  }\n`\nconst StyledTitle = styled.div`\n  display: grid;\n  grid-template-rows: repeat(2, 3rem);\n  height: 100%;\n  background: ${Colors.grey2};\n\n  @media only screen and (max-width: 680px) {\n    display: none;\n  }\n`\nconst StyledContent = styled.div`\n \n`\n\nconst StyledTitleItem = styled(Text)<IStyledTitleItem>`\n  cursor: pointer;\n  background-color: ${props => props.activeTab === props.name ? Colors.white : Colors.grey}\n  color: ${props => props.activeTab === props.name ? Colors.black : Colors.black}\n  justify-content: center;\n  align-items: center;\n  display: grid;\n  border-bottom: 1px solid ${Colors.grey};\n  padding: 0 1rem;\n`\n\nconst Tabs = (props) => {\n  const [activeTab, setActiveTab] = useState(props.children[0].props.name)\n  const { children } = props\n  const childrenFull = children.filter(elm => elm)\n  \n  useEffect(() => {\n    setActiveTab(props.defaultActivedTab)\n  }, [props.defaultActivedTab])\n\n  return (\n    <StyledTabs>\n      <StyledTitle>\n        {childrenFull.map((child) => {\n            return (\n            <StyledTitleItem\n              key={child.props.name}\n              activeTab={activeTab}\n              name={child.props.name}\n            >\n              {child.props.title}\n            </StyledTitleItem>)\n          })}\n      </StyledTitle>\n      <StyledContent>\n        {childrenFull.map((child) => {\n          if (child.props.name !== activeTab) return undefined;\n          return child.props.children;\n        })}\n      </StyledContent>\n    </StyledTabs>\n  )\n}\n\nexport default Tabs;","import React from 'react';\nimport styled from 'styled-components'\n\nexport interface ITabItem{\n  children?: React.ReactNode,\n  isActived?: boolean,\n  title?: string,\n  name?: string\n}\n\nconst StyledTabItem = styled.div<ITabItem>`\n  display: ${props => props.isActived ? 'block' : 'none'}\n`\n\nconst TabItem: React.FC<ITabItem> = ({ children, isActived }) => {\n  return (\n    <StyledTabItem isActived={isActived}>\n      {children}\n    </StyledTabItem>\n  )\n}\n\nexport default TabItem;","import React from 'react';\nimport InputMask from 'react-input-mask';\nimport { Input } from '../'\n\nconst IBANInput = (props) => {\n return (\n  <InputMask {...props} mask=\"DE-99-9999-9999-99999-99\">\n    {(inputProps) => (\n      <Input {...inputProps} placeholder=\"DE-12-1234-1234-12345-12\" />\n    )}\n  </InputMask>\n );\n}\n\nexport default IBANInput\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledForm = styled.form`\n  grid-row-gap: 0.1rem;\n  width: calc(100vw - 2rem);\n  display: grid;\n  grid-template-rows: repeat(auto-fit, minmax(1rem, 3fr));\n\n  @media only screen and (min-width: 680px) {\n    width: 100%;\n  }\n`\n\nfunction Form({ children, onSubmit, ...props }) {\n  const onFromSubmit = (e) => {\n    e.preventDefault()\n    const values: any = Array.from(e.target.elements)\n      .reduce((prev, cur: any = {}) => ({\n        ...prev,\n        [cur.name]: cur.type === 'checkbox' ? cur.checked : cur.value\n      }), {})\n    onSubmit(values)\n  }\n\n  return (\n    <StyledForm onSubmit={onFromSubmit} {...props}>\n      {\n        children\n      }\n    </StyledForm>\n  )\n}\n\nexport default Form","import styled from 'styled-components'\nimport * as Colors from '../Variables/Colors'\n\nconst StyledFormItem = styled.div`\n  background-color: ${Colors.grey2};\n`\n\n\nexport default StyledFormItem","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledLoading = styled.div`\n  width: 20px;\n  height: 20px;\n  border: 5px solid rgba(29, 161, 242, 0.2);\n  border-left-color: rgb(29, 161, 242);\n  border-radius: 50%;\n  background: transparent;\n  animation-name: rotate-s-loader;\n  animation-iteration-count: infinite;\n  animation-duration: 1s;\n  animation-timing-function: linear;\n  position: relative;\n  margin: 0 auto;\n\n  @keyframes rotate-s-loader {\n    from {\n      transform: rotate(0);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default function Loading() {\n  return (\n    <StyledLoading />\n  )\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button } from '../../../ui-kit'\nimport * as Colors from '../../../ui-kit/Variables/Colors'\n\nexport interface IInvoiceItem {\n  id?: number,\n  date?: string | null,\n  subject?: string | null,\n  amount?: number | string | null,\n  unit?: string,\n  ibanNum?: string,\n  onDelete?: (e: any) => void,\n  onEdit?: (e: any) => void\n  actived?: boolean,\n  onClick?: (e: any) => void\n}\n\nexport interface IStyledInvoiceItem {\n  hasControl: boolean,\n  actived?: boolean,\n  onClick?: (e: any) => void\n}\n\nexport interface IStyledInvoiceItemControl {\n  hasControl: boolean\n}\n\nconst StyledDateText = styled(Text)`\n  grid-area: date;\n`\n\nconst StyledSubjectText = styled(Text)`\n  grid-area: subject;\n`\n\nconst StyledAmountText = styled(Text)`\n  grid-area: amount;\n`\n\nconst StyledIBANNumText = styled(Text)`\n  grid-area: ibanNum;\n`\n\n\nconst StyledInvoiceItem = styled.div<IStyledInvoiceItem>`\n  display: grid;\n  ${\n    (props) => props.hasControl \n    ? `\n      grid-template-columns: 1fr 1fr 1fr;\n      grid-template-rows: auto;\n      grid-template-areas: \"date amount control\" \"ibanNum ibanNum control\" \"subject subject control\";\n      grid-row-gap: 0.5rem;\n    `\n    : `\n      grid-template-columns: 1fr 1fr;\n      grid-template-rows: auto;\n      grid-template-areas: \"date subject\" \"ibanNum ibanNum\" \"amount amount\";\n      grid-row-gap: 0.5rem;\n    `\n  }\n  \n\n  column-gap: 5px;\n  align-items: center;\n  border: 1px solid #ddd;\n  transition: all 0.5s;\n  cursor: pointer;\n  padding: 1rem;\n\n  background-color: ${props => props.actived ? Colors.blue1 : Colors.white}\n  color: ${props => props.actived ? Colors.primary : Colors.black }\n\n  &:hover {\n    background-color: ${Colors.blue1};\n  }\n\n\n  @media only screen and (min-width: 680px) {\n    ${(props) => props.hasControl \n      ? `\n        grid-template-columns: 1fr 1fr 1fr 2fr 1fr;\n        grid-template-areas: \"date subject amount ibanNum control\";\n      `\n      : `\n        grid-template-columns: 1fr 1fr 1fr 1fr;\n        grid-template-areas: \"date subject amount ibanNum\";\n      `\n    }\n  }\n`\n\nconst StyledInvoiceItemControl = styled.div<IStyledInvoiceItemControl>`\n  grid-area: control;\n  display: ${(props) => props.hasControl ? 'grid' : 'none'};\n  grid-template-rows: repeat(2, 1fr);\n  grid-template-columns: none;\n  row-gap: 5px;\n\n  @media only screen and (min-width: 680px) {\n    grid-area: control;\n    display: grid;\n    grid-template-rows: 1fr;\n    grid-template-columns: repeat(2,1fr);\n    grid-column-gap: 5px;\n  }\n`\n\n\nconst InvoiceItem: React.FC<IInvoiceItem> = React.memo(({ onEdit, onDelete, actived, onClick, ...item}) => {\n  const hasControl  = !!onEdit || !!onDelete\n  return (\n    <StyledInvoiceItem hasControl={hasControl} actived={actived} onClick={onClick}>\n      <StyledDateText>{item.date || '-' }</StyledDateText>\n      <StyledSubjectText>{item.subject || '-' }</StyledSubjectText>\n      <StyledAmountText>{(item.amount && item.amount.toLocaleString()) || '-' } {item.unit}</StyledAmountText>\n      <StyledIBANNumText>{item.ibanNum || '-' }</StyledIBANNumText>\n      {\n        (onEdit || onDelete) &&\n        <StyledInvoiceItemControl hasControl={hasControl} >\n          { onEdit && <Button color=\"primary\" onClick={() => onEdit(item)}>Edit</Button> }\n          { onDelete && <Button color=\"danger\" onClick={() => onDelete(item)}>Delete</Button>}\n        </StyledInvoiceItemControl>\n      }\n    </StyledInvoiceItem>\n  )\n})\n\nexport default InvoiceItem;\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components';\nimport { Input, DatePicker, ToggleSwitch, Form, FormItem, Button } from '../../../ui-kit'\n\n\nconst StyledInvoiceInformation = styled.div`\n  display: grid;\n  width: auto;\n  padding: 1rem;\n`\n\nconst StyledButtonSubmit = styled(Button)`\n  display: grid;\n  margin: 0 auto;\n  width: 100%;\n  margin-top: 1rem;\n`\n\nconst InvoiceInformation = React.memo(({ item = { amount: 0, subject: '' }, ...props }: any) => {\n  const { date: itemDate } = item\n  const [date, setDate] = useState(itemDate ? new Date(itemDate) : new Date())\n  const [isRetrieve, setIsRetrive] = useState(false)\n  const [amount, setAmount] = useState(item.amount)\n  const [subject, setSubject] = useState(item.subject)\n\n  useEffect(() => {\n    setAmount(item.amount)\n    setSubject(item.subject)\n  }, [item.amount, item.subject])\n\n  const datePickerOnchange = (value) => { setDate(value) }\n  \n  const toggleSwitchOnchange = (value) => {\n    setIsRetrive(value)\n    props.onRetriveFromBankAcc(value)\n  }\n  \n  \n  const subjectOnchange = (e) => { setSubject(e.target.value) }\n  const amountOnChange = (e) => { setAmount(e.target.value) }\n  const onSubmit = (e) => {\n    const values = Object.keys(e).filter(e => e).reduce((prev, cur) => ({ ...prev, [cur]: e[cur] }), { amount: 0 }) || {}\n    const amountFromValue = values && values.amount.toString()\n    if(isRetrieve) {\n      props.onNext({ ...values })\n    } else {\n      props.onSubmit({ ...values, amount: parseInt(amountFromValue, 10)})\n    }\n  }\n\n  const isValidWithII = subject && subject.length  && amount\n  const isValidWithPayments = subject && subject.length && isRetrieve\n\n  return (\n    <StyledInvoiceInformation>\n      <Form onSubmit={onSubmit}>\n        <FormItem>\n          <DatePicker\n            name=\"date\"\n            label=\"Date\"\n            onChange={datePickerOnchange}\n            selectedDate={date}\n            dateFormat=\"yyyy-MM-dd\"\n          />\n        </FormItem>\n        <FormItem>\n          <Input label=\"Subject\" name=\"subject\" defaultValue={subject} onChange={subjectOnchange}/>\n        </FormItem>\n        <FormItem>\n          <ToggleSwitch \n            name=\"retriveFromBankAcc\"\n            // isOpen={retriveFromBankAcc}\n            label=\"Retrieve amount from your bank account\"\n            onChange={toggleSwitchOnchange}\n          />\n        </FormItem>\n        <FormItem>\n          { !isRetrieve && <Input name=\"amount\" label=\"Amount\" type=\"number\" unit=\"EUR\" isFormat value={amount} onChange={amountOnChange} /> }\n        </FormItem>\n        { \n          isRetrieve \n          ? <StyledButtonSubmit color=\"primary\" disabled={!isValidWithPayments}>Next</StyledButtonSubmit>\n          : <StyledButtonSubmit color=\"primary\" type=\"submit\" disabled={!isValidWithII}>Done</StyledButtonSubmit>\n        }\n      </Form>\n    </StyledInvoiceInformation>\n  )\n})\n\nexport default InvoiceInformation\n","import React from 'react'\nimport styled from 'styled-components';\nimport InvoiceItem, { IInvoiceItem } from '../InvoiceList/InvoiceItem'\nimport { IBANInput, SimpleList, Form, FormItem, Button, Text } from '../../../ui-kit'\n\nexport interface IInvoicePayment{\n  onSelect?: (e: any) => void,\n  onSubmit?: (e: any) => void,\n  onChangeIBANNum?: (e: any) => void,\n  data: IInvoiceItem[],\n  selected?: IInvoiceItem\n}\n\n\nconst StyledInvoiceInformation = styled.div`\n  display: grid;\n  padding: 1rem;\n`\n\nconst StyledInvoicePaymentForm = styled(Form)`\n  display: grid;\n  grid-row-gap: 1rem;\n`\n\nconst StyledFoundInvoiceText = styled(Text)``\n\nconst StyledBtnConfirm = styled(Button)`\n  margin: 0;\n`\n\nconst InvoicePayment: React.FC<IInvoicePayment> = React.memo((props) => {\n  const onChangeIBAN = (e) => {\n    const value = e.target.value\n    if (!value.includes('_')) {\n      props.onChangeIBANNum && props.onChangeIBANNum(value)\n    }\n  }\n\n  const onSelectItem = (values) => {\n    props.onSelect && props.onSelect(values)\n  }\n\n  return (\n    <StyledInvoiceInformation>\n      <StyledInvoicePaymentForm onSubmit={props.onSubmit}>\n        <FormItem>\n          <IBANInput\n            name=\"ibanNum\"\n            label=\"Search IBAN\"\n            onChange={onChangeIBAN}\n          />\n        </FormItem>\n        {\n          props.data && props.data.length > 0\n          && (\n            <>\n              <StyledFoundInvoiceText>Found {props.data.length} payment(s) from bank transfer</StyledFoundInvoiceText>\n              <SimpleList data={props.data} renderItem={\n                (itemProps) => <InvoiceItem actived={itemProps.id === (props.selected && props.selected.id)} {...itemProps} onClick={() => onSelectItem(itemProps)} />} \n              />\n            </>\n          )\n        }\n\n        {\n          props.data && props.data.length <= 0 && (<StyledFoundInvoiceText>Not found any payments</StyledFoundInvoiceText>)\n        }\n        \n        \n        <StyledBtnConfirm color=\"primary\" disabled={!props.selected} type=\"submit\">Done</StyledBtnConfirm>\n      </StyledInvoicePaymentForm>\n    </StyledInvoiceInformation>\n  )\n})\n\nexport default InvoicePayment\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components';\nimport InvoiceItem from './InvoiceItem'\nimport { SimpleList, Text, Button, Modal, Tabs, TabItem, Loading } from '../../../ui-kit'\nimport InvoiceInformation from '../InvoiceInformation/InvoiceInformation'\nimport InvoicePayment from '../InvoicePayment/InvoicePayment'\nimport { IInvoiceItem } from './InvoiceItem'\n\nconst StyledInvoiceList = styled.div`\n  display: grid;\n  grid-template-rows: 5rem auto;\n`\n\nconst StyledInvoiceListHead = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n  padding: 1rem;\n`\n\nconst StyledInvoiceListTitle = styled.div``\n\nconst StyledInvoiceListAddBtn = styled.div`\n  text-align: right;\n`\n\nconst StyledInvoiceListBody = styled.div`\n  padding: 1rem;\n`\n\nconst StyledModalConfirm = styled.div`\n  display: grid;\n  grid-template-columns: 10rem 10rem;\n  padding: 1rem;\n  justify-content: center;\n  grid-column-gap: 1rem;\n  align-items: center;\n  height: 100%;\n`\n\nexport interface IInvoiceList {\n  data: IInvoiceItem[]\n  getInvoices: () => void,\n  addInvoice: (v: IInvoiceItem) => void,\n  editInvoice: (v1: IInvoiceItem, v2: IInvoiceItem) => void,\n  deleteInvoice: (v: IInvoiceItem) => void,\n  searchIBAN?: (iban: string) => void,\n  selectItem: (v: IInvoiceItem) => void,\n  setModeInvoice: (e: string, p?: IInvoiceItem) => void,\n  resetState: () => void,\n  setTabActive: (tabName: string) => void,\n  setRetrieveFromBankAcc: (v: boolean) =>  void,\n  selectPaymentItem: (v: IInvoiceItem) => void,\n  isRetrieveFromBankAcc?: boolean,\n  paymentsFromBankAccount: IInvoiceItem[],\n  loading?: boolean,\n  selectedItem: IInvoiceItem,\n  modeInvoiceModal?: string,\n  isDeleteMode? : boolean,\n  activedTab?: string,\n  selectedPaymentItem?: IInvoiceItem\n}\n\nconst InvoiceList: React.FC<IInvoiceList> = (props) => {\n  const {\n    data,\n    loading,\n    selectItem,\n    selectedItem,\n    searchIBAN,\n    getInvoices,\n    addInvoice,\n    editInvoice,\n    deleteInvoice,\n    paymentsFromBankAccount,\n    modeInvoiceModal,\n    isDeleteMode,\n    setModeInvoice,\n    resetState,\n    setTabActive,\n    activedTab,\n    isRetrieveFromBankAcc,\n    setRetrieveFromBankAcc,\n    selectedPaymentItem,\n    selectPaymentItem\n  } = props;\n  \n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const isOpenModalAddAndEdit = isOpenModal && !isDeleteMode;\n  const isOpenModalDelete = isOpenModal && !!isDeleteMode;\n\n  useEffect(() => {\n    getInvoices()\n  }, [getInvoices])\n  \n  useEffect(() => {\n    if (modeInvoiceModal) {\n      setIsOpenModal(true)\n    } else {\n      setIsOpenModal(false)\n    }\n  }, [modeInvoiceModal])\n\n\n  const onDelete = (value: IInvoiceItem) => setModeInvoice(\"DELETE\", value)\n  const onEdit = (value: IInvoiceItem) => setModeInvoice(\"EDIT\", value)\n  const onAdd = () => setModeInvoice(\"ADD\")\n  \n  const onSubmit = (values) => {\n    if (modeInvoiceModal === 'EDIT') {\n      editInvoice(selectedItem, values)\n    }\n\n    if (modeInvoiceModal === 'DELETE') {\n      deleteInvoice(selectedItem)\n    }\n\n    if (modeInvoiceModal === 'ADD') {\n      addInvoice({ ...values, ...selectedItem })\n    }\n  }\n\n  const onNext = (values) => {\n    const valuesNew = { ...selectedItem, ...values }\n    selectItem(valuesNew)\n    setTabActive(\"pm\")\n  }\n\n  const renderItem = (itemProps: IInvoiceItem, idx: number) => (\n    <InvoiceItem\n      {...itemProps}\n      key={idx}\n      onDelete={onDelete}\n      onEdit={onEdit}\n    />)\n\n  return (\n    <>\n      <StyledInvoiceList>\n        <StyledInvoiceListHead>\n          <StyledInvoiceListTitle>\n              <Text>Invoices List</Text>\n            </StyledInvoiceListTitle>\n          <StyledInvoiceListAddBtn>\n            <Button color=\"primary\" onClick={onAdd}> Add new invoice </Button>\n          </StyledInvoiceListAddBtn>\n        </StyledInvoiceListHead>\n        <StyledInvoiceListBody>\n          {\n            loading\n            ? <Loading />\n            : <SimpleList data={data} renderItem={renderItem} />\n          }\n        </StyledInvoiceListBody>\n      </StyledInvoiceList>\n      <Modal title=\"Invoice Dialog\" isOpen={isOpenModalAddAndEdit} onClose={resetState}>\n        <Tabs defaultActivedTab={activedTab}>\n            <TabItem title=\"Invoice Information\" name=\"ii\">\n              <InvoiceInformation\n                onSubmit={onSubmit}\n                item={selectedItem}\n                onRetriveFromBankAcc={setRetrieveFromBankAcc}\n                onNext={onNext}\n              />\n            </TabItem>\n            {\n              isRetrieveFromBankAcc && \n              <TabItem title=\"Payments\" name=\"pm\">\n                <InvoicePayment\n                  data={paymentsFromBankAccount}\n                  onSubmit={onSubmit}\n                  onChangeIBANNum={searchIBAN}\n                  onSelect={selectPaymentItem}\n                  selected={selectedPaymentItem}\n                />\n              </TabItem>\n            }\n        </Tabs>\n      </Modal>\n      <Modal title=\"Do you want to delete this item ?\" isOpen={isOpenModalDelete} onClose={resetState}>\n        <StyledModalConfirm>\n          <Button color=\"primary\" onClick={onSubmit}>Yes</Button>\n          <Button color=\"danger\" onClick={resetState}>No</Button>\n        </StyledModalConfirm>\n      </Modal>\n    </>\n  )\n}\n\nexport default InvoiceList\n","import { IInvoiceItem } from './InvoiceList/InvoiceItem'\n\nexport const GET_INVOICES_REQUEST = 'GET_INVOICES_REQUEST'\nexport const GET_INVOICES_SUCCESS = 'GET_INVOICES_SUCCESS'\nexport const GET_INVOICES_FAILURE = 'GET_INVOICES_FAILURE'\n\nexport const SEARCH_IBAN_REQUEST = 'SEARCH_IBAN_REQUEST'\nexport const SEARCH_IBAN_SUCCESS = 'SEARCH_IBAN_SUCCESS'\nexport const SEARCH_IBAN_FAILURE = 'SEARCH_IBAN_FAILURE'\n\nexport const ADD_INVOICE = 'ADD_INVOICE'\nexport const DELETE_INVOICE = 'DELETE_INVOICE'\nexport const EDIT_INVOICE = 'EDIT_INVOICE'\nexport const RETRIEVE_AMOUNT = 'RETRIEVE_AMOUNT'\nexport const SELECT_ITEM = 'SELECT_ITEM'\nexport const SET_MODE = 'SET_MODE'\nexport const RESET_STATE = 'RESET_STATE'\nexport const SET_TAB_ACTIVE = 'SET_TAB_ACTIVE'\nexport const SET_RETRIEVE_FROM_BANK_ACC = 'SET_RETRIEVE_FROM_BANK_ACC'\nexport const SELECT_PAYMENT_ITEM = 'SELECT_PAYMENT_ITEM'\n\nexport interface IGetInvoiceRequestAction {\n  type: typeof GET_INVOICES_REQUEST\n}\n\nexport interface IGetInvoiceSuccessAction {\n  type: typeof GET_INVOICES_SUCCESS,\n  payload: IInvoiceItem[]\n}\n\nexport interface IGetInvoiceFailureAction {\n  type: typeof GET_INVOICES_FAILURE,\n  error: typeof Error\n}\n\nexport interface ISearchIBANRequestAction {\n  type: typeof SEARCH_IBAN_REQUEST\n}\n\nexport interface ISearchIBANSuccessAction {\n  type: typeof SEARCH_IBAN_SUCCESS,\n  payload: IInvoiceItem[]\n}\n\nexport interface ISearchIBANFailureAction {\n  type: typeof SEARCH_IBAN_FAILURE,\n  error: typeof Error\n}\n\nexport interface IAddInvoiceAction {\n  type: typeof ADD_INVOICE,\n  payload: IInvoiceItem\n}\n\nexport interface IEditInvoiceAction {\n  type: typeof EDIT_INVOICE,\n  id?: number,\n  payload: IInvoiceItem\n}\n\nexport interface IDeleteInvoiceAction {\n  type: typeof DELETE_INVOICE,\n  id?: number\n}\n\nexport interface IRetrieveAmountAction {\n  type: typeof RETRIEVE_AMOUNT,\n  payload: number\n}\n\nexport interface ISelectItemAction {\n  type: typeof SELECT_ITEM,\n  payload: IInvoiceItem\n}\n\nexport interface ISetModeAction {\n  type: typeof SET_MODE,\n  mode: string,\n  payload?: IInvoiceItem\n}\n\nexport interface IResetStateAction {\n  type: typeof RESET_STATE,\n}\n\nexport interface ISetTabActiveAction {\n  type: typeof SET_TAB_ACTIVE,\n  payload: string,\n}\n\nexport interface ISSetRetrieveFromBankAccAction {\n  type: typeof SET_RETRIEVE_FROM_BANK_ACC,\n  payload: boolean,\n}\n\nexport interface ISelectPaymentItemAction {\n  type: typeof SELECT_PAYMENT_ITEM,\n  payload: IInvoiceItem,\n}\n\nexport type InvoicesActionTypes = IGetInvoiceRequestAction \n| IGetInvoiceSuccessAction \n| IGetInvoiceFailureAction \n| IAddInvoiceAction \n| IRetrieveAmountAction \n| IDeleteInvoiceAction \n| IEditInvoiceAction\n| ISearchIBANRequestAction\n| ISearchIBANSuccessAction\n| ISearchIBANFailureAction\n| ISelectItemAction\n| ISetModeAction\n| IResetStateAction\n| ISetTabActiveAction\n| ISSetRetrieveFromBankAccAction\n| ISelectPaymentItemAction\n\n","export const delay = (timer = 1000) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(true)\n    }, timer)\n  })\n}","import { delay } from '../utils/delay';\nimport invoicedata from './invoices.json';\n\nexport async function getInvoices() {\n  await delay(2000)\n  return invoicedata\n}","import invoicedata from './invoices.json';\n\nexport async function searchIBAN(iban) {\n  return invoicedata.filter(elm => elm.ibanNum === iban)\n}","import { ThunkAction } from 'redux-thunk'\nimport { AppState } from '../../store'\nimport { Action } from 'redux'\nimport { \n  IGetInvoiceRequestAction, IGetInvoiceSuccessAction, IGetInvoiceFailureAction,\n  IAddInvoiceAction, IRetrieveAmountAction, IEditInvoiceAction, IDeleteInvoiceAction,\n  ISearchIBANRequestAction, ISearchIBANSuccessAction, ISearchIBANFailureAction, ISelectItemAction,\n  ISetModeAction, IResetStateAction, ISetTabActiveAction, ISSetRetrieveFromBankAccAction, ISelectPaymentItemAction,\n  SELECT_ITEM, SET_TAB_ACTIVE, SET_RETRIEVE_FROM_BANK_ACC, SELECT_PAYMENT_ITEM,\n  ADD_INVOICE, EDIT_INVOICE, DELETE_INVOICE, RETRIEVE_AMOUNT, SET_MODE, RESET_STATE,\n  SEARCH_IBAN_REQUEST, SEARCH_IBAN_SUCCESS, SEARCH_IBAN_FAILURE,\n  GET_INVOICES_REQUEST, GET_INVOICES_SUCCESS, GET_INVOICES_FAILURE\n}  from './Invoice.actionTypes'\nimport { getInvoices as getInvoicesService } from '../../services/getInvoices'\nimport { searchIBAN as searchIBANService } from '../../services/searchIBAN';\nimport { IInvoiceItem } from './InvoiceList/InvoiceItem';\n\n\n\nexport function getInvoicesRequest(): IGetInvoiceRequestAction {\n  return {\n    type: GET_INVOICES_REQUEST\n  }\n}\n\nexport function getInvoicesSuccess(payload): IGetInvoiceSuccessAction {\n  return {\n    type: GET_INVOICES_SUCCESS,\n    payload\n  }\n}\n\nexport function getInvoicesFailure(error): IGetInvoiceFailureAction {\n  return {\n    type: GET_INVOICES_FAILURE,\n    error\n  }\n}\n\nexport function searchIBANRequest(): ISearchIBANRequestAction {\n  return {\n    type: SEARCH_IBAN_REQUEST\n  }\n}\n\nexport function searchIBANSuccess(payload): ISearchIBANSuccessAction {\n  return {\n    type: SEARCH_IBAN_SUCCESS,\n    payload\n  }\n}\n\nexport function searchIBANFailure(error): ISearchIBANFailureAction {\n  return {\n    type: SEARCH_IBAN_FAILURE,\n    error\n  }\n}\n\n\nexport function addInvoiceAction(payload): IAddInvoiceAction {\n  return {\n    type: ADD_INVOICE,\n    payload\n  }\n}\n\nexport function editInvoiceAction(id, payload): IEditInvoiceAction {\n  return {\n    type: EDIT_INVOICE,\n    id,\n    payload\n  }\n}\n\nexport function deleteInvoiceAction(id): IDeleteInvoiceAction {\n  return {\n    type: DELETE_INVOICE,\n    id\n  }\n}\n\nexport function retrieveAmountAction(payload): IRetrieveAmountAction {\n  return {\n    type: RETRIEVE_AMOUNT,\n    payload\n  }\n}\n\nexport function selectItemAction(payload): ISelectItemAction {\n  return {\n    type: SELECT_ITEM,\n    payload\n  }\n}\n\nexport function setModeAction(mode: string, payload?: IInvoiceItem): ISetModeAction {\n  return {\n    type: SET_MODE,\n    mode,\n    payload\n  }\n}\n\nexport function resetStateAction(): IResetStateAction {\n  return {\n    type: RESET_STATE\n  }\n}\n\nexport function setTabActiveAction(payload: string): ISetTabActiveAction {\n  return {\n    type: SET_TAB_ACTIVE,\n    payload\n  }\n}\n\nexport function setRetrieveFromBankAccAction(value: boolean): ISSetRetrieveFromBankAccAction {\n  return {\n    type: SET_RETRIEVE_FROM_BANK_ACC,\n    payload: value\n  }\n}\n\nexport function selectPaymentItemAction(payload: IInvoiceItem): ISelectPaymentItemAction {\n  return {\n    type: SELECT_PAYMENT_ITEM,\n    payload\n  }\n}\n\nexport const getInvoices = (): ThunkAction<void, AppState, null, Action<string>> => \n  async dispatch => {\n    dispatch(getInvoicesRequest())\n    try {\n      const invoices = await getInvoicesService()\n      dispatch(getInvoicesSuccess(invoices))\n    } catch(error) {\n      getInvoicesFailure(error)\n    }\n}\n\nexport const selectItem = (item: IInvoiceItem): ThunkAction<void, AppState, null, Action<string>> => \n   dispatch => {\n    dispatch(selectItemAction(item))\n}\n\n\nexport const setModeInvoice = (mode: string, data?: IInvoiceItem): ThunkAction<void, AppState, null, Action<string>> => \n   dispatch => {\n    dispatch(setModeAction(mode, data))\n}\n\nexport const selectPaymentItem = (data: IInvoiceItem): ThunkAction<void, AppState, null, Action<string>> => \n   dispatch => {\n    dispatch(selectPaymentItemAction(data))\n}\n\nexport const resetState = (): ThunkAction<void, AppState, null, Action<string>> => \n   dispatch => {\n    dispatch(resetStateAction())\n}\n\nexport const setTabActive = (tabName: string): ThunkAction<void, AppState, null, Action<string>> => \n   dispatch => {\n    dispatch(setTabActiveAction(tabName))\n}\n\nexport const setRetrieveFromBankAcc = (value: boolean): ThunkAction<void, AppState, null, Action<string>> => \n   dispatch => {\n    dispatch(setRetrieveFromBankAccAction(value))\n}\n\nexport const searchIBAN = (ibanNum: string): ThunkAction<void, AppState, null, Action<string>> => \n  async dispatch => { \n    dispatch(searchIBANRequest())\n    try {\n      const data = await searchIBANService(ibanNum)\n      dispatch(searchIBANSuccess(data))\n    } catch(error) {\n      dispatch(searchIBANFailure(error))\n    }\n  }\n\nexport const addInvoice = ({ date, subject, amount, unit = 'EUR', ibanNum }): ThunkAction<void, AppState, null, Action<string>> => \n  async dispatch => {\n    dispatch(addInvoiceAction({ date, subject, amount, unit, ibanNum }))\n    dispatch(resetState())\n  }\n\nexport const deleteInvoice = ({ id }): ThunkAction<void, AppState, null, Action<string>> => \n  async dispatch => {\n    dispatch(deleteInvoiceAction(id))\n    dispatch(resetState())\n  }\n\nexport const editInvoice = ({ id }, data): ThunkAction<void, AppState, null, Action<string>> => \n  async dispatch => {\n    dispatch(editInvoiceAction(id, data))\n    dispatch(resetState())\n  }","import { connect } from \"react-redux\";\nimport InvoiceList from \"./InvoiceList\";\nimport {\n  getInvoices,\n  addInvoice,\n  searchIBAN,\n  editInvoice,\n  deleteInvoice,\n  selectItem,\n  setModeInvoice,\n  resetState,\n  setTabActive,\n  setRetrieveFromBankAcc,\n  selectPaymentItem\n} from \"../Invoice.actions\";\n\nconst mapStateToProps = state => ({\n  loading: state.invoiceReducer.request,\n  data: state.invoiceReducer.data,\n  error: state.invoiceReducer.error,\n  paymentsFromBankAccount: state.invoiceReducer.paymentsFromBankAccount,\n  selectedItem: state.invoiceReducer.selectedItem || {},\n  modeInvoiceModal: state.invoiceReducer.modeInvoiceModal,\n  isDeleteMode: state.invoiceReducer.isDeleteMode,\n  activedTab: state.invoiceReducer.activedTab,\n  isRetrieveFromBankAcc: state.invoiceReducer.isRetrieveFromBankAcc,\n  selectedPaymentItem: state.invoiceReducer.selectedPaymentItem\n});\n\nconst mapDispatchToProps = {\n  getInvoices,\n  addInvoice,\n  editInvoice,\n  deleteInvoice,\n  selectItem,\n  searchIBAN,\n  setModeInvoice,\n  resetState,\n  setTabActive,\n  setRetrieveFromBankAcc,\n  selectPaymentItem\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InvoiceList);\n","import InvoiceListContainer from './InvoiceList.container'\n\nexport { default as InvoiceItem } from './InvoiceItem'\nexport default InvoiceListContainer","import React from 'react';\nimport InvoiceList from '../components/Invoice/InvoiceList';\n\nimport './Home.css';\n\nfunction Home() {\n  return (\n    <div className=\"App\">\n      <InvoiceList />\n    </div>\n  );\n}\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  InvoicesActionTypes,\n  SEARCH_IBAN_REQUEST, SEARCH_IBAN_SUCCESS, SEARCH_IBAN_FAILURE, SELECT_ITEM, SELECT_PAYMENT_ITEM,\n  GET_INVOICES_REQUEST, GET_INVOICES_SUCCESS, GET_INVOICES_FAILURE, ADD_INVOICE, SET_MODE,\n  EDIT_INVOICE, DELETE_INVOICE, RESET_STATE, SET_TAB_ACTIVE, SET_RETRIEVE_FROM_BANK_ACC,\n}  from './Invoice.actionTypes'\nimport { IInvoiceItem } from './InvoiceList/InvoiceItem'\n\nexport interface IInvoiceState {\n  request: boolean,\n  data: IInvoiceItem[],\n  error: typeof Error | null,\n  paymentsFromBankAccount: IInvoiceItem[],\n  selectedItem?: IInvoiceItem |  null,\n  modeInvoiceModal: string,\n  isDeleteMode: boolean,\n  activedTab: string,\n  isRetrieveFromBankAcc: boolean,\n  selectedPaymentItem: IInvoiceItem | null\n}\n\nconst initialState: IInvoiceState = {\n  request: false,\n  data: [],\n  error: null,\n  paymentsFromBankAccount: [],\n  selectedItem: null,\n  modeInvoiceModal: '',\n  isDeleteMode: false,\n  activedTab: 'ii',\n  isRetrieveFromBankAcc: false,\n  selectedPaymentItem: null\n}\n\nexport function invoiceReducer(\n  state = initialState,\n  action: InvoicesActionTypes\n): IInvoiceState {\n  switch (action.type) {\n    case GET_INVOICES_REQUEST:\n      return {\n        ...state,\n        request: true,\n        data: [],\n        error: null\n      }\n    case GET_INVOICES_SUCCESS:\n      return {\n        ...state,\n        request: false,\n        data: action.payload\n      }\n    case GET_INVOICES_FAILURE:\n      return {\n        ...state,\n        request: false,\n        error: action.error\n      }\n\n    case ADD_INVOICE:\n      return {\n        ...state,\n        data: [{\n          ...action.payload,\n          amount: state.selectedPaymentItem ? state.selectedPaymentItem.amount : action.payload.amount,\n          ibanNum: state.selectedPaymentItem ? state.selectedPaymentItem.ibanNum : action.payload.ibanNum\n        }, \n          ...state.data\n        ]\n      }\n\n    case EDIT_INVOICE:\n      return {\n        ...state,\n        data: state.data.map((elm) => {\n          if(elm.id === action.id) {\n            const newElm = {\n              ...elm,\n              ...state.selectedItem,\n              ...action.payload\n            }\n            if (state.selectedPaymentItem) {\n              return {\n                ...newElm,\n                amount: state.selectedPaymentItem.amount,\n                ibanNum: state.selectedPaymentItem.ibanNum\n              }\n            }\n            return newElm\n          }\n          return elm\n        })\n      }\n\n    case DELETE_INVOICE:\n      return {\n        ...state,\n        data: state.data.filter((item) => item.id !== action.id)\n      }\n      case SEARCH_IBAN_REQUEST:\n      return {\n        ...state,\n        request: true,\n        paymentsFromBankAccount: [],\n        error: null\n      }\n    case SEARCH_IBAN_SUCCESS:\n      return {\n        ...state,\n        request: false,\n        paymentsFromBankAccount: action.payload\n      }\n    case SEARCH_IBAN_FAILURE:\n      return {\n        ...state,\n        request: false,\n        error: action.error\n      }\n\n    case SELECT_ITEM:\n      return {\n        ...state,\n        selectedItem: action.payload\n      }  \n    case SET_MODE:\n      return {\n        ...state,\n        selectedItem: action.payload,\n        modeInvoiceModal: action.mode,\n        isDeleteMode: action.mode === 'DELETE'\n      } \n    case SET_TAB_ACTIVE:\n      return {\n        ...state,\n        activedTab: action.payload\n      } \n    case SET_RETRIEVE_FROM_BANK_ACC:\n      return {\n        ...state,\n        isRetrieveFromBankAcc: action.payload\n      } \n    case SELECT_PAYMENT_ITEM:\n      return {\n        ...state,\n        selectedPaymentItem: action.payload\n      } \n    case RESET_STATE:\n      return {\n        ...state,\n        selectedItem: null,\n        modeInvoiceModal: '',\n        isDeleteMode: false,\n        isRetrieveFromBankAcc: false,\n        selectedPaymentItem: null,\n        paymentsFromBankAccount: [],\n        activedTab: 'ii'\n      }  \n    default:\n      return state\n  }\n}\n\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { invoiceReducer } from '../components/Invoice/Invoice.reducer';\n\nconst rootReducer = combineReducers({\n  invoiceReducer\n});\n\nexport type AppState = ReturnType<typeof rootReducer>\n\nexport const store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    process.env.NODE_ENV === 'development' &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__\n      ? (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n      : (f: any) => f\n  )\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './pages/Home';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nlet Root = (\n  <Provider store={store}>\n    <Home />\n  </Provider>\n);\n\nReactDOM.render(Root, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}